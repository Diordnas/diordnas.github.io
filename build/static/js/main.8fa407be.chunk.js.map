{"version":3,"sources":["components/Todo.js","components/AddTodo.js","components/AddTodoMenu.js","components/Event.js","components/AddEvent.js","components/AddEventMenu.js","App.js","serviceWorker.js","index.js"],"names":["moment","require","Todo","props","state","currentName","completionPercent","durationRemaining","duration","this","info","endDate","diff","remainingTime","Math","floor","days","hours","minutes","seconds","setState","startDate","name","tick","interval","setInterval","clearInterval","className","onClick","removeTodo","id","moveTodo","style","float","width","React","Component","AddTodo","margin","openMenu","AddTodoMenu","handleChange","bind","event","target","value","addTodoMenuOpen","overflow","closeMenu","display","onChange","type","addTodo","Event","date","height","removeEvent","marginRight","AddEventMenu","addEventMenuOpen","addEvent","arrayMove","cookies","Cookies","App","todos","events","loadCookie","cookie","get","undefined","openTodoMenu","closeTodoMenu","menuState","newTodo","random","toString","substring","concat","forceUpdate","set","JSON","stringify","i","length","console","log","splice","amount","index","openEventMenu","closeEventMenu","newEvent","sort","a","b","map","todo","moveEvent","Fragment","AddEvent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fa407be.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../index.css'\r\n\r\nvar moment = require('moment');\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentName: \"\",\r\n      completionPercent: this.props.completionPercent\r\n    };\r\n  };\r\n\r\n  tick(){\r\n    const durationRemaining = moment.duration(moment(this.props.info.endDate).diff(moment()));\r\n    var remainingTime = '';\r\n    if (durationRemaining >= 86400000){\r\n      remainingTime += Math.floor(durationRemaining.days()) + ' days ';\r\n      remainingTime += Math.floor(durationRemaining.hours()) + ' hours ';\r\n    } else if (durationRemaining >= 3600000){\r\n      remainingTime += Math.floor(durationRemaining.hours()) + ' hours ';\r\n      remainingTime += Math.floor(durationRemaining.minutes()) + ' minutes ';\r\n    } else {\r\n      remainingTime += Math.floor(durationRemaining.minutes()) + ' minutes ';\r\n      remainingTime += Math.floor(durationRemaining.seconds()) + ' seconds ';\r\n    }\r\n    this.setState({\r\n      completionPercent: 100*(moment().diff(this.props.info.startDate)/moment(this.props.info.endDate).diff(this.props.info.startDate)),\r\n      remainingTime: remainingTime + 'remaining'\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (this.state.currentName !== this.props.info.name){\r\n      this.setState({\r\n        currentName: this.props.info.name\r\n      });\r\n      this.tick();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tick()\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"itemHeader\">\r\n            <p className=\"itemName\">{this.props.info.name}</p>\r\n\r\n            <button className=\"closeP\" onClick = {() => this.props.removeTodo(this.props.info.id)}>\r\n              <i className=\"large material-icons icon Icon\">close</i>\r\n            </button>\r\n            <button className=\"moveButton\" onClick = {() => this.props.moveTodo(this.props.info.id, 1)}>\r\n              <i className=\"large material-icons icon Icon\">arrow_drop_down</i>\r\n            </button>\r\n            <button className=\"moveButton\" onClick = {() => this.props.moveTodo(this.props.info.id, -1)}>\r\n              <i className=\"large material-icons icon Icon\">arrow_drop_up</i>\r\n            </button>\r\n            \r\n            <br></br>\r\n            <div className = \"progressBar\">\r\n              <p className=\"remainingTime\" style={{float: \"right\"}}><b>{this.state.remainingTime}</b></p>\r\n              <div className=\"gradient\" style = {{width:this.state.completionPercent+\"%\"}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    render() {\r\n        return (\r\n            <div style = {{margin: \"10px\"}}>\r\n                <button className = \"addButton\" onClick={this.props.openMenu}>Add a To-Do\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodoMenu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.props.state.addTodoMenuOpen === true){\r\n            return (\r\n                <div className=\"popUp\">\r\n                    <div style={{overflow: \"hidden\"}}>\r\n                        <p className=\"popupHeader\">Add a To-Do</p>\r\n                        <button className=\"closeP\" onClick = {this.props.closeMenu}>\r\n                            <i className=\"large material-icons icon closeIcon\">close</i>\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <form>\r\n                        <div>\r\n                            <p style={{display: \"inline-block\"}}>Name:</p>\r\n                            <input name = \"name\" className=\"popUpInput popUpNameInput\" onChange={this.handleChange}></input>\r\n                        </div>\r\n                        <div className=\"popUpDates\">\r\n                            <p>Start Date:</p>\r\n                            <input name = \"startDate\" className=\"popUpInput\" type=\"datetime-local\" onChange={this.handleChange}></input>\r\n                            <p>End Date:</p>\r\n                            <input name = \"endDate\" className=\"popUpInput\" type=\"datetime-local\" onChange={this.handleChange}></input>\r\n                        </div>\r\n                        <input className=\"confirmButton\" type = \"button\" value=\"Confirm\" onClick={() => this.props.addTodo(this.state)}></input>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddTodoMenu\r\n","import React from 'react'\r\nimport '../index.css'\r\n\r\nvar moment = require('moment');\r\n\r\nclass Event extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentName: \"\",\r\n      completionPercent: this.props.completionPercent\r\n    };\r\n  };\r\n\r\n  tick(){\r\n    const durationRemaining = moment.duration(moment(this.props.info.date).diff(moment()));\r\n    this.setState({\r\n      remainingTime: 'In ' + (durationRemaining.days()+1)  + ' days'\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (this.state.currentName !== this.props.info.name){\r\n      this.setState({\r\n        currentName: this.props.info.name\r\n      });\r\n      this.tick();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tick()\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"itemHeader\" style={{height:'25px'}}>\r\n            <p className=\"itemName\">{this.props.info.name}</p>\r\n            \r\n\r\n            <button className=\"closeP\" onClick = {() => this.props.removeEvent(this.props.info.id)}>\r\n              <i className=\"large material-icons icon Icon\">close</i>\r\n            </button>\r\n            <p className=\"itemName\" style={{float: \"right\", marginRight: '10px'}}>{this.state.remainingTime}</p>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    render() {\r\n        return (\r\n            <div style = {{margin: \"10px\"}}>\r\n                <button className = \"addButton\" onClick={this.props.openMenu}>Add an Event\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddEventMenu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.props.state.addEventMenuOpen === true){\r\n            return (\r\n                <div className=\"popUp\">\r\n                    <div style={{overflow: \"hidden\"}}>\r\n                        <p className=\"popupHeader\">Add an Event</p>\r\n                        <button className=\"closeP\" onClick = {this.props.closeMenu}>\r\n                            <i className=\"large material-icons icon closeIcon\">close</i>\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <form>\r\n                        <div>\r\n                            <p style={{display: \"inline-block\"}}>Name:</p>\r\n                            <input name = \"name\" className=\"popUpInput popUpNameInput\" onChange={this.handleChange}></input>\r\n                        </div>\r\n                        <div className=\"popUpDates\">\r\n                            <p>Date:</p>\r\n                            <input name = \"date\" className=\"popUpInput\" type=\"date\" onChange={this.handleChange}></input>\r\n                        </div>\r\n                        <input className=\"confirmButton\" type = \"button\" value=\"Confirm\" onClick={() => this.props.addEvent(this.state)}></input>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddEventMenu\r\n","import React from 'react';\nimport Cookies from 'universal-cookie';\nimport './index.css';\n\n\nimport Todo from './components/Todo'\nimport AddTodo from './components/AddTodo'\nimport AddTodoMenu from './components/AddTodoMenu'\n\nimport Event from './components/Event'\nimport AddEvent from './components/AddEvent'\nimport AddEventMenu from './components/AddEventMenu'\n\nvar arrayMove = require('array-move');\nvar moment = require('moment');\nconst cookies = new Cookies();\n\nclass App extends React.Component{\n\n    state = {\n      addTodoMenuOpen: false,\n      todos: [],\n\n      addEventMenuOpen: false,\n      events: []\n    }\n\n    componentDidMount(){\n      this.loadCookie();\n    }\n\n\n    loadCookie = () => {\n      var cookie = cookies.get('state')\n      if (cookie !== undefined){\n        this.setState({\n          todos: cookie\n        });\n      }\n      cookie = cookies.get('events')\n      if (cookie !== undefined){\n        this.setState({\n          events: cookie\n        });\n      }      \n    }\n\n  openTodoMenu = () => {\n    this.setState({\n      addTodoMenuOpen: true\n    });\n  }\n\n  closeTodoMenu = () => {\n    this.setState(\n      {\n        addTodoMenuOpen: false\n      }\n    );\n  }\n\n  addTodo = (menuState) => {\n    const name = menuState.name;\n    const startDate = moment(menuState.startDate);\n    const endDate = moment(menuState.endDate);\n    const newTodo = {name: name, id: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15), startDate: startDate, endDate: endDate}\n    this.setState(\n    {\n      addTodoMenuOpen: false,\n      todos: this.state.todos.concat(newTodo)\n    }\n    );\n    this.forceUpdate();\n    cookies.set('state', JSON.stringify(this.state.todos.concat(newTodo)));\n  }\n\n  removeTodo = (id) => {\n    var i = 0;\n    while (i<this.state.todos.length){\n      if(this.state.todos[i].id === id){\n        console.log(this.state.todos[i].name)\n        this.state.todos.splice(i,1);\n      }\n      i++;\n    }\n    this.forceUpdate();\n    cookies.set('state', JSON.stringify(this.state.todos))\n  }\n\n  moveTodo = (id, amount) => {\n    var i = 0;\n    while (i<this.state.todos.length){\n      if(this.state.todos[i].id === id){\n        var index = i;\n      }\n      i++;\n    }\n    this.setState({\n      todos: arrayMove(this.state.todos, index, index + amount)\n    });\n    this.forceUpdate();\n  }\n\n  openEventMenu = () => {\n    this.setState({\n      addEventMenuOpen: true\n    });\n  }\n\n  closeEventMenu = () => {\n    this.setState(\n      {\n        addEventMenuOpen: false\n      }\n    );\n  }\n\n  addEvent = (menuState) => {\n    const name = menuState.name;\n    const date = moment(menuState.date);\n    const newEvent = {name: name, id: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15), date: date}\n\n    var events = this.state.events.concat(newEvent)\n    events.sort((a, b) => (a.date > b.date) ? 1 : -1)\n\n    this.setState({\n      addEventMenuOpen: false,\n      events: events\n    })\n\n    this.forceUpdate();\n    cookies.set('events', JSON.stringify(this.state.events.concat(newEvent).sort((a, b) => (a.date > b.date) ? 1 : -1)));\n  }\n\n  removeEvent = (id) => {\n    var i = 0;\n    while (i<this.state.events.length){\n      if(this.state.events[i].id === id){\n        console.log(this.state.events[i].name)\n        this.state.events.splice(i,1);\n      }\n      i++;\n    }\n    this.forceUpdate();\n    cookies.set('events', JSON.stringify(this.state.events))\n  }\n\n\n  render() {\n\n    const todos = this.state.todos.map((todo) =>\n      <Todo info={todo} completionPercent={100*(moment().diff(todo.startDate)/moment(todo.endDate).diff(todo.startDate))} removeTodo = {this.removeTodo} moveTodo = {this.moveTodo}/>\n    );\n\n    const events = this.state.events.map((event) =>\n      <Event info={event} removeEvent = {this.removeEvent} moveEvent = {this.moveEvent}/>\n    );\n\n    return(\n      <React.Fragment>\n        <div className = \"mainBox\">\n          <h1>Events:</h1>\n          {events}\n          <AddEvent openMenu = {this.openEventMenu}></AddEvent>\n          <AddEventMenu state = {this.state} closeMenu = {this.closeEventMenu} addEvent = {this.addEvent}/>\n        </div>\n  \n        <div className = \"mainBox\" style = {{width: '70%', float: 'right', height: '90vh'}}>\n          <h1>To-Dos:</h1>\n          {todos}\n          <AddTodo openMenu = {this.openTodoMenu}/>\n          <AddTodoMenu state = {this.state} closeMenu = {this.closeTodoMenu} addTodo = {this.addTodo}/>\n        </div>\n        \n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}